// <auto-generated />
using AutoBaloo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AutoBaloo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221212074738_Modification_entity_cars")]
    partial class Modification_entity_cars
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AutoBaloo.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateDebut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateFin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<double>("montantReservation")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AutoBaloo.Models.Statut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<int>("StatutVehicule")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Statuts");
                });

            modelBuilder.Entity("AutoBaloo.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateStock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdVehicule")
                        .HasColumnType("int");

                    b.Property<int>("QteStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdVehicule");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("AutoBaloo.Models.Vehicule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CouleurVehicule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateArrivé")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateConstruct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionVehicule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarqueVehicule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionVehicule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrixVehicule")
                        .HasColumnType("float");

                    b.Property<double>("Prix_par_jour")
                        .HasColumnType("float");

                    b.Property<string>("TypeCarbu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("typeAchat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicules");
                });

            modelBuilder.Entity("AutoBaloo.Models.Reservation", b =>
                {
                    b.HasOne("AutoBaloo.Models.Vehicule", "Vehicule")
                        .WithMany("Reservations")
                        .HasForeignKey("IdVehicule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutoBaloo.Models.Statut", b =>
                {
                    b.HasOne("AutoBaloo.Models.Vehicule", "Vehicule")
                        .WithMany("Statuts")
                        .HasForeignKey("IdVehicule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutoBaloo.Models.Stock", b =>
                {
                    b.HasOne("AutoBaloo.Models.Vehicule", "Vehicule")
                        .WithMany("Stocks")
                        .HasForeignKey("IdVehicule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicule");
                });

            modelBuilder.Entity("AutoBaloo.Models.Vehicule", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Statuts");

                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
